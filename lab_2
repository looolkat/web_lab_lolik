# Лабораторная работа №2. Инструменты разработчика в браузере

В данной работе вы познакомитесь с инструментами разработчика браузеров на примере Chrome. Научитесь использовать их для диагностики некоторых неполадок веб-ресурсов.

## Описание работы

Работа состоит из нескольких связанных между собой заданий. Предпочтительно для выполнения работы использовать браузер Google Chrome. В других современных браузерах тоже имеются инструменты разработчика и их функционала достаточно для выполнения данных заданий, но отличия в интерфейсе самых инструментов может сильно затруднить вашу задачу.

### Задание №1. Исследование заголовков и тела обычных запросов и их ответов.

В используемом браузере заблаговременно откройте инструменты разработчика, после чего перейдите по ссылке https://ya.ru/ и изучите во вкладке Network инструментов разработчика заголовки основного запроса и ответа на него:
- Request URL
- Request Method
- Status Code
- Remote Address
- Referrer Policy
- content-type
- cache-control
- cookie
- user-agent
- referer

#### Ответьте на вопросы:
1. Что означает каждый из этих заголовков? 
Содержат сведения, которые относятся к запросу и к самому ответу.

2. Из каких частей состоит Remote Address? 
IP-адрес сервера и порт

3. Что означает порт подключения?
В зависимости от протокола будет использован тот или иной порт, в данном случае протокол https - 443

4. На какие секции разделены все заголовки? Какой смысл у каждой секции?
- General – содержат сведения, относящиеся как к запросу, так и к ответу, но не содержат сведений о данных в теле
- Response Headers - содержат сведения о сервере, такие как время, местоположение, конфигурация
- Request Headers - содержат информацию о клиенте и запрашиваемом ресурсе

5. Какие заголовки повторяются в нескольких секциях? Какой в этом смысл? - Cache-control - определяет количество времени, которое файл должен находиться в кэше. Сервер может возвратить директиву, чтобы указать,
 каким образом и на какой срок браузер и другие промежуточные кэши должны кэшировать тот или иной ответ.

6. Что из себя представляет тело ответа? 
Тело ответа представляет из себя список заголовков:
- Cache-control Задайте инструкцию для кэширования. Другие типы настроек: без кэша, без хранилища, без преобразования
- Date: Время создания сообщения
- Expires: Устанавливает дату, когда соответствующий контент больше не будет новым/свежим


------------

### Задание №2. Исследование указывающих ответов сервера.
При открытых во вкладке инструментах разработчика сделайте запрос на http://rgups.ru/ и обратите внимание на то изменился ли адрес в адресной строке? - Если Вы всё правильно сделали, то он должен был немного измениться. 

#### Изучите из-за чего так произошло и ответьте на вопросы:
1. Из-за чего произошло изменение адреса в адресной строке? Какие заголовки в этом поучаствовали и как?
2. Адрес был изменён в исходном запросе или потребовались дополнительные запросы, если были дополнительные запросы, то сколько?
3. Какой статус ответа имеет первоначальный запрос?

Изменился протокол запроса с http на https, так как поучаствовал заголовок Status Code он нам говорит о состоянии нашего запроса (GET).
301 - применяется с целью организации постоянной переадресации с неактуального доменного адреса или url отдельной страницы на рабочую версию.

------------

### Задание №3. Исследование получения и передачи cookie.
Повторите запрос на https://ya.ru/ и изучите заголовки влияющие на получение и отправку cookie параметров.

#### После чего:
1. Перечислите название этих параметров и формат данных в них. 
Содержит сохраненную информацию, ранее отправленную сервером. 
Например: Cookie: имя=значение; имя2=значение2; имя3=значение3

2. Как можно удобно просмотреть все cookie, используемые на странице?(см. ответ на вопрос 3) Что означают их параметры Name, Value, Domain, Path и Expires?

name - имя cookie 
value - значение cookie 
expires - дата окончания действия cookie (по умолчанию - до конца сессии) 
path - путь, для которого cookie действительно (по умолчанию - документ, в котором значение было установлено) 
domain - домен, для которого cookie действительно (по умолчанию - домен, в котором значение было установлено) //

3. Как просмотреть все cookie связанные с текущим (просматриваемым) сайтом?
Открыть инструменты разработчика -> Консоль -> Ввести: alert(document.cookie) и нажать enter

4. Опишите своими словами как вы понимаете суть и назначение cookie? 
Это некоторая часть данных, которая позволяет браузеру вновь не спрашивать у пользователя.

------------

### Задание №4. Исследование построения документов и сопутствующих запросов.
Изучите вкладку Elements и дерево тегов документа. Изучите список запросов на вкладке Network.

#### Ответьте на вопросы:
1. Что такое DOM? 
DOM - это представление документа в виде дерева тегов. Это дерево образуется за счет вложенной структуры тегов + текстовые фрагменты страницы, каждый из которых образует отдельный узел.

2. Может ли итоговый документ отличаться от тела ответа, полученного от сервера? Если да, то по каким причинам это может происходить?	
Может, так как документ может динамически менять своё содержимое добавляя или удаляя узлы.

3. Почему если вы сделали всего один запрос, в списке огромное количество запросов и ответов? Что они из себя представляют и на каком основании браузер их делает? 
Подгрузка картинок, подрузка истории прошлых запросов в строке (целый список)

------------

### Задание №5. Исполнение кода в консоли. Использование консоли для отладки.
Откройте вкладку Console и попробуйте выполнить в ней простейшие арифметические операции в синтаксисе JavaScript.
Получилось!
Открыть инструменты разработчика -> Консоль -> Ввести, к примеру:
let x = 3, y = 15;
x + y
И консоль выведет результат операции, в данном случае 18!

Учебник-справочник по языку JavaScript — https://learn.javascript.ru/ 

